<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TasBloklar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBggGBQkIBwgKCQkKDRYODQwMDRoTFBAWHxwhIB8cHh4j
        JzIqIyUvJR4eKzssLzM1ODg4ISo9QTw2QTI3ODX/2wBDAQkKCg0LDRkODhk1JB4kNTU1NTU1NTU1NTU1
        NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTX/wAARCAA8ADwDAREAAhEBAxEB/8QA
        GgAAAgMBAQAAAAAAAAAAAAAAAAUBAgQDBv/EADsQAAEDAwAFCAgDCQAAAAAAAAECAwQABREGEhQhkhMV
        MUFTYXKxIiMyMzVRUoEWc5E0RFRicZOhwfH/xAAaAQADAQEBAQAAAAAAAAAAAAAAAwQBAgUG/8QAJhEA
        AgIBAgYCAwEAAAAAAAAAAAECAxEhMQQSExQyUUFSIkJxM//aAAwDAQACEQMRAD8AyuzZDj7i1vrUpS1E
        qKt5314ktW2z6SCSikiu1Pdqvirk6AyXse9XxUYAzSb/AHO2ONbFOfY5ZYQ5qK9oU+p4ykS8TGL5f6aB
        Kfzkur395pLKydqe7VfFWGBtT2Peq/WgCWr3cIuu2xNkIRrZACz8hT4SkloT2Ri5anJW5xfiPnSfkfFb
        FfsaMnQUGC28e3F/NFNq+Sa/9Rl8qUVMOjpoMAUZRpyUgqcUR8/9U2OxPLcrfLc47fpjlrnlqEp0llCi
        cgf9zXcp15eEKjVc4r8hTNi3CFGLvOBcAOCEnfXUXCTxg5nG6CzzHVu23JaArnIJzvxmuXOtPGDqNdsk
        nzAuyznMcpcEL1Tka2d1YrYL9QdFkt5Fxa7jn4mn/NZ1K/qddK3PkZHmbi1Oaj7cpZcHtA7hTF03FvAq
        StUlHmNfNVyz8UTgdWTXHPX9RyqtzpI9foonRuLZy3pGXJM7lVErAONXdqj9KdGdeNiayu9S3E6z6xfi
        PmaiZ6MFsL7zuti/6jzptXmKv8DW17lHhFLa1YyPii9c4OgowAtl/HIvhNPj4Mmn/rEZZ6aSVfJxWcOK
        +3X3UyK0ET3KTrpGt9wfiy1LZfacUlaFIOQc1rpnnVHMeJqwvyF1xu8OXBU2y6VKPUUkV3XXKMsi7bq5
        Rwmd0X6A22lKnjkDB9A1y6ptsZG+tRWpb8Q2/tjwGs6U/RvcVrdh+ILf25/tmjpT9G9ev2Y37pFdujL6
        HCWkAgq1Tu3UxVzUWmTzug7ItM2DSC37/Xq6ezNK6U/RR3Fedxpa7XOv8VUy1xHpMfXKNdKcDWAGRvps
        ap42ES4ivO5E/k7jcZEqWw0686sqWop6T1Up2SzuUQqgorQz7FEwcxGTn+Ws55ezrpV/VAIUQfujPDWc
        8vYdKv6i67xI6VR9RlCMuAHVGM02qUnnLJb6oLGEMdii/wAIxjw0vnl7KejXjYNii5/ZGOGjnl7NVVa+
        EGwxSMbIxw0c8vZipr9De06U3OxRFQ7a4hmOFlQQEdBOCadG2WCedFedheo+sX1ekfOp2tSqOyIHRWan
        WQ6qNQ1F13GVRfzRTa09SfiH4/0YjeKVqUZCjUwKNTcmdz3qvt5U2OcE83qZdIJb9s0hnxY7nqmXlJTr
        JBON/dVTohkkjxNmBbz1M+tPAKzt4HXc2Bz1M+tPAKOhAO5sPWaBWaPpeLibqpw7E2HWuSUEYV37t9Mh
        TBZEXcRN41PKrvMtK1AOJOFEb0j50voQHdzZ7I56mfWngFHbwN7mwg3qYAfTTwCjt4B3Nh7rQiwR9IrC
        qbPce5YvKR6BAGAB1Y76bGiGBEuIsyf/2Q==
</value>
  </data>
</root>